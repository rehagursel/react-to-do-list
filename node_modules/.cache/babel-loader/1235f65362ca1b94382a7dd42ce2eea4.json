{"ast":null,"code":"/* import React, { useState } from \"react\";\n\nimport \"./Expenses.css\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from './ExpensesChart'\nimport Card from \"../UI/Card\"; */\n\n/* const Expenses = (props) => {\n  const [filterYear, setFilterYear] = useState(\"All\");\n\n  const filterDateChangeHandler = (selectedDate) => {\n    setFilterYear(selectedDate);\n  };\n\n  const filteredExpenses = props.itemsList.filter((each) => {\n    if (filterYear !== \"All\") {\n      return each.date.getFullYear().toString() === filterYear;\n    } else {\n      return each;\n    }\n  }); */\n\n/* \n  //most apropriate approach because return can stay clean (2. way)------*******-------------\n\n  let expensesContent = <p>No Expenses Found</p>  //we can use JSX syntax here(out of return)\n\n  if(filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map((expense) => (\n      <ExpenseItem\n        key={expense.id} \n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n    ));\n  }\n\n  //------------********************************--------------------------------\n */\n\n/* return (\n  <div>\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        selected={filterYear}\n        onChangeFilterDate={filterDateChangeHandler}\n      />\n      <ExpensesChart expenses={filteredExpenses}/>\n      <ExpensesList itemsRendering={filteredExpenses}/> */\n{\n  /* {expensesContent} */\n}\n{\n  /*  {filteredExpenses.length === 0 ? (.      //1. way\n    <p>No Expenses Found</p>\n  ) : (\n    filteredExpenses.map((expense) => (\n      <ExpenseItem\n        key={expense.id} //this key prop is using for react awareness of diff elements and not to refresh all items again when a change ccures.\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n    ))\n  )} */\n}\n/*   </Card>\n</div>\n);\n};\nexport default Items; */","map":{"version":3,"sources":["/Users/reha/Desktop/development/web development/react/To-Do-List-React-Project/src/components/Items/Items.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AAAC;AAAwB;AAC1B;AAAC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAc;AACV;AACJ;AACA;AACA;AACA","sourcesContent":["/* import React, { useState } from \"react\";\n\nimport \"./Expenses.css\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from './ExpensesChart'\nimport Card from \"../UI/Card\"; */\n\n/* const Expenses = (props) => {\n  const [filterYear, setFilterYear] = useState(\"All\");\n\n  const filterDateChangeHandler = (selectedDate) => {\n    setFilterYear(selectedDate);\n  };\n\n  const filteredExpenses = props.itemsList.filter((each) => {\n    if (filterYear !== \"All\") {\n      return each.date.getFullYear().toString() === filterYear;\n    } else {\n      return each;\n    }\n  }); */\n\n/* \n  //most apropriate approach because return can stay clean (2. way)------*******-------------\n\n  let expensesContent = <p>No Expenses Found</p>  //we can use JSX syntax here(out of return)\n\n  if(filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map((expense) => (\n      <ExpenseItem\n        key={expense.id} \n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n    ));\n  }\n\n  //------------********************************--------------------------------\n */\n  /* return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filterYear}\n          onChangeFilterDate={filterDateChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses}/>\n        <ExpensesList itemsRendering={filteredExpenses}/> */\n        {/* {expensesContent} */}\n       {/*  {filteredExpenses.length === 0 ? (.      //1. way\n          <p>No Expenses Found</p>\n        ) : (\n          filteredExpenses.map((expense) => (\n            <ExpenseItem\n              key={expense.id} //this key prop is using for react awareness of diff elements and not to refresh all items again when a change ccures.\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n            />\n          ))\n        )} */}\n    /*   </Card>\n    </div>\n  );\n};\n\nexport default Items; */\n"]},"metadata":{},"sourceType":"module"}