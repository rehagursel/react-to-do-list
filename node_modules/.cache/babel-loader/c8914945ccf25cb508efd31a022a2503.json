{"ast":null,"code":"var _jsxFileName = \"/Users/reha/Desktop/development/web development/react/To-Do-List-React-Project/src/components/Items/Items.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from './ExpensesChart';\nimport Card from \"../UI/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filterYear, setFilterYear] = useState(\"All\");\n\n  const filterDateChangeHandler = selectedDate => {\n    setFilterYear(selectedDate);\n  };\n\n  const filteredExpenses = props.itemsList.filter(each => {\n    if (filterYear !== \"All\") {\n      return each.date.getFullYear().toString() === filterYear;\n    } else {\n      return each;\n    }\n  });\n  /* \n    //most apropriate approach because return can stay clean (2. way)------*******-------------\n  \n    let expensesContent = <p>No Expenses Found</p>  //we can use JSX syntax here(out of return)\n  \n    if(filteredExpenses.length > 0) {\n      expensesContent = filteredExpenses.map((expense) => (\n        <ExpenseItem\n          key={expense.id} \n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ));\n    }\n  \n    //------------********************************--------------------------------\n   */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filterYear,\n        onChangeFilterDate: filterDateChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n        expenses: filteredExpenses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n        itemsRendering: filteredExpenses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"kvqOjuOYeNQzfp6efuJCETUJXnQ=\");\n\n_c = Expenses;\nexport default s;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/reha/Desktop/development/web development/react/To-Do-List-React-Project/src/components/Items/Items.js"],"names":["React","useState","ExpensesList","ExpensesFilter","ExpensesChart","Card","Expenses","props","filterYear","setFilterYear","filterDateChangeHandler","selectedDate","filteredExpenses","itemsList","filter","each","date","getFullYear","toString","s"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,gBAAP;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMS,uBAAuB,GAAIC,YAAD,IAAkB;AAChDF,IAAAA,aAAa,CAACE,YAAD,CAAb;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,SAAN,CAAgBC,MAAhB,CAAwBC,IAAD,IAAU;AACxD,QAAIP,UAAU,KAAK,KAAnB,EAA0B;AACxB,aAAOO,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,OAAuCV,UAA9C;AACD,KAFD,MAEO;AACL,aAAOO,IAAP;AACD;AACF,GANwB,CAAzB;AAQF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEP,UADZ;AAEE,QAAA,kBAAkB,EAAEE;AAFtB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAEE;AAAzB;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,YAAD;AAAc,QAAA,cAAc,EAAEA;AAA9B;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA1DD;;GAAMN,Q;;KAAAA,Q;AA4DN,eAAea,CAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./Expenses.css\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from './ExpensesChart'\nimport Card from \"../UI/Card\";\n\nconst Expenses = (props) => {\n  const [filterYear, setFilterYear] = useState(\"All\");\n\n  const filterDateChangeHandler = (selectedDate) => {\n    setFilterYear(selectedDate);\n  };\n\n  const filteredExpenses = props.itemsList.filter((each) => {\n    if (filterYear !== \"All\") {\n      return each.date.getFullYear().toString() === filterYear;\n    } else {\n      return each;\n    }\n  });\n\n/* \n  //most apropriate approach because return can stay clean (2. way)------*******-------------\n\n  let expensesContent = <p>No Expenses Found</p>  //we can use JSX syntax here(out of return)\n\n  if(filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map((expense) => (\n      <ExpenseItem\n        key={expense.id} \n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n    ));\n  }\n\n  //------------********************************--------------------------------\n */\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filterYear}\n          onChangeFilterDate={filterDateChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses}/>\n        <ExpensesList itemsRendering={filteredExpenses}/>\n        {/* {expensesContent} */}\n       {/*  {filteredExpenses.length === 0 ? (.      //1. way\n          <p>No Expenses Found</p>\n        ) : (\n          filteredExpenses.map((expense) => (\n            <ExpenseItem\n              key={expense.id} //this key prop is using for react awareness of diff elements and not to refresh all items again when a change ccures.\n              title={expense.title}\n              amount={expense.amount}\n              date={expense.date}\n            />\n          ))\n        )} */}\n      </Card>\n    </div>\n  );\n};\n\nexport default s;\n"]},"metadata":{},"sourceType":"module"}