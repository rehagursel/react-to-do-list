{"ast":null,"code":"var _jsxFileName = \"/Users/reha/Desktop/development/web development/react/To-Do-List-React-Project/src/components/NewItem/NewItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./NewItem.css\";\nimport ItemForm from \"./ItemForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewItem = props => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveItemDataHandler = enteredItemData => {\n    const itemData = {\n      id: Math.random().toString(),\n      ...enteredItemData\n    };\n    props.onAddItem(itemData);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-item\",\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startEditingHandler,\n        children: \"Add New \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(ItemForm, {\n      onSaveItemData: saveItemDataHandler,\n      onCancel: stopEditingHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewItem, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = NewItem;\nexport default NewItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewItem\");","map":{"version":3,"sources":["/Users/reha/Desktop/development/web development/react/To-Do-List-React-Project/src/components/NewItem/NewItem.js"],"names":["React","useState","ItemForm","NewItem","props","isEditing","setIsEditing","saveItemDataHandler","enteredItemData","itemData","id","Math","random","toString","onAddItem","startEditingHandler","stopEditingHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMM,mBAAmB,GAAIC,eAAD,IAAqB;AAC/C,UAAMC,QAAQ,GAAG;AACfC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EADW;AAEf,SAAGL;AAFY,KAAjB;AAIAJ,IAAAA,KAAK,CAACU,SAAN,CAAgBL,QAAhB;AACD,GAND;;AAQA,QAAMM,mBAAmB,GAAG,MAAM;AAChCT,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMU,kBAAkB,GAAG,MAAM;AAC/BV,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,eACG,CAACD,SAAD,iBACC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEU,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAOGV,SAAS,iBACR,QAAC,QAAD;AACE,MAAA,cAAc,EAAEE,mBADlB;AAEE,MAAA,QAAQ,EAAES;AAFZ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnCD;;GAAMb,O;;KAAAA,O;AAqCN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./NewItem.css\";\nimport ItemForm from \"./ItemForm\";\n\nconst NewItem = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveItemDataHandler = (enteredItemData) => {\n    const itemData = {\n      id: Math.random().toString(),\n      ...enteredItemData,\n    };\n    props.onAddItem(itemData);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-item\">\n      {!isEditing && (\n        <div>\n          <h2>To Do List</h2>\n          <button onClick={startEditingHandler}>Add New </button>\n        </div>\n      )}\n      {isEditing && (\n        <ItemForm\n          onSaveItemData={saveItemDataHandler}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewItem;\n"]},"metadata":{},"sourceType":"module"}